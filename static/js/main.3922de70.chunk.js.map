{"version":3,"sources":["components/About.js","components/Intro.js","components/Projects.js","components/Animation.js","components/Contact.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["parallaxData","start","end","properties","startValue","endValue","property","About","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_showBio","setState","isShowBio","state","Bio","id","text","react_default","a","createElement","className","lib_default","Container","Row","Col","sm","xs","es","onEnter","bind","onLeave","bottomOffset","react_transition_group","in","timeout","classNames","unmountOnExit","Component","parallaxData2","Intro","Projects","_showTitle","isShowTitle","_showContent","isShowContent","console","log","href","Jumbotron","Contact","speed","_this2","firebase","ref","child","on","snap","val","Home","_LoadPage","loadPage","src_components_Intro","src_components_About","src_components_Projects","src_components_Contact","App","isActive","key","src_components_Home","PureComponent","Boolean","window","location","hostname","match","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3922de70.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Plx from 'react-plx';\nimport './About.css';\nimport  Waypoint  from 'react-waypoint';\nimport { CSSTransition } from 'react-transition-group';\nimport { Container ,Row,Col} from 'reactstrap';\n\n\nconst parallaxData = [\n    {\n      start: 0,\n      end: 500,\n      properties: [\n            {\n                startValue: -15,\n                endValue: 0,\n                property: 'translateY',\n            },\n        ],\n    },\n    \n    {\n        start: 500,\n        end: 1000,\n        properties: [\n            {\n                startValue: 0,\n                endValue: 20,\n                property: 'translateY',\n            },\n        ],\n    },\n];\n \nclass About extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            isShowBio : false,\n            Bio: [\n                {id: 0, text: 'hi'},\n                {id: 1, text: ' hello'},\n                {id: 2, text: ' good bye.'},\n            ]\n        }\n    }\n\n    _showBio = () =>{\n        this.setState({isShowBio: !this.isShowBio});\n    }\n\n    render(){\n\n        const { isShowBio } = this.state;\n\n        return(\n            <div className=\"About-container\">\n                \n              \n            \n                \n                <hr></hr>\n                <div className=\"bull-container\">\n                    <Plx\n                        parallaxData={parallaxData}\n                    >\n                        <Container>\n                            <Row>\n                                <Col  sm=\"50\">\n                                <h1 className=\"Name\">\n                                    <span> <div className=\"first-name\">Z A N E</div> P A R T A I N </span> \n                                </h1>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col xs=\"6\" sm=\"4\">\n                                      Computer Science \n                                </Col>\n                                <Col xs=\"6\" sm=\"4\">\n                                    Software Engineer\n                                </Col>\n                                <Col xs=\"6\" sm=\"4\">\n                                    Web Developer\n                                </Col>\n                            </Row>\n                        </Container>\n                    </Plx>\n                </div>\n                <br></br>\n                <Waypoint\n                    onEnter={this._showBio.bind(this)}\n                    onLeave={this._showBio.bind(this)}\n                    bottomOffset='60%'\n                >\n                    <div> \n                        \n                        <Container >\n                            <CSSTransition\n                                in={isShowBio} //boolean : trigger for animation\n                                timeout={0} //ms\n                                classNames=\"bio\" //CSS class : name of animation\n                                unmountOnExit \n                            >\n                                <div className=\"bio-text\">\n                                    I am an undergraduate student living in Pullman, attending Washington State University working toward my Bachelors degree in Computer Science. \n                                    I have a passion for technology and community, which fuels my drive to create code that will make a difference. When I am not busy with school work I \n                                    spend my free time working on personal projects, and hanging out with family. I believ the experience I gain from my courses has given me the foundation \n                                    I need to approach new problems, quickly learn new programming languages, and write clean code. \n                                    I have a drive to become a professional, and strive to gain real world experience. \n                                </div>\n                            </CSSTransition>\n                        </Container>\n\n                    </div>\n                </Waypoint>\n            </div>\n        )\n    }\n}\n\nexport default About;","import React from 'react'\nimport Plx from 'react-plx';\nimport './Intro.css';\n\n/**\n * The parallaxData _transformation's below will take place over a specified\n * _transition time/effect, and scroll position.\n */\nconst parallaxData = [\n    {\n      start: 0,\n      end: 500,\n      properties: [\n            {\n                startValue: 1,\n                endValue: 2,\n                property: 'scale',\n            },\n        ],\n        },\n    ];\nconst parallaxData2 = [\n      {\n        start: 0,\n        end: 500,\n        properties: [  \n          {\n              startValue: 0,\n              endValue: 500,\n              property: 'translateX',\n          }\n        ],\n      },\n      \n    ];\n\n\nconst Intro = (props) =>{\n            \n        return(\n            <div className=\"Intro\">\n                {/**background ring*/}\n                <Plx\n                    parallaxData={parallaxData}\n                >\n                    <div className=\"myBanner-box\"></div>\n                </Plx>\n                {/**Middle ground ring*/}\n                <Plx\n                     parallaxData={parallaxData2}\n                >\n                    <div className=\"banner-mbox\"></div>\n                </Plx>\n                {/**Foreground ring*/}\n                <Plx   \n                    parallaxData={parallaxData}\n                >\n                    <div className=\"banner-fbox\"></div>\n                </Plx>\n                {/**scroll text/icon helper*/}\n                <div className=\"scroll-text\">\n                    scroll  <div className=\"scroll-icon\"> </div>\n                </div>\n            </div>\n        );\n}\nexport default Intro;","import React, { Component } from 'react';\nimport './Projects.css';\nimport { Container, Row, Col, Jumbotron } from 'reactstrap';\nimport  Plx  from 'react-plx';\nimport { CSSTransition } from 'react-transition-group';\nimport Waypoint from 'react-waypoint';\n\nconst parallaxData = [\n    {\n      start: 1100,\n      end: 2000,\n      properties: [\n            {\n                startValue: 0,\n                endValue: 50,\n                property: 'translateY',\n            },\n            {\n                startValue: 1,\n                endValue: 1.3,\n                property: 'scale',\n            },\n        ],\n    },\n];\n\nclass Projects extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            isShowTitle: false,\n        };\n    }\n\n    _showTitle = () => {\n        this.setState({isShowTitle: true});\n    }\n\n    _showContent = () => {\n        this.setState({isShowContent: true});\n        console.log(\"hi\");\n    }\n\n    render(){\n        const { isShowTitle }  = this.state;\n\n        return(\n\n                <div className=\"Projects-container\">\n\n                    <Waypoint\n                        onEnter={this._showTitle.bind(this)}\n                        bottomOffset='20%'\n                    >\n                        <div className=\"title-parent\"> \n                            <Plx\n                                parallaxData={parallaxData}\n                            >\n                                <CSSTransition className=\"title-container p\"\n                                    in={isShowTitle}\n                                    timeout={0}\n                                    classNames=\"P\"\n                                    unmountOnExit\n                                >\n                                    <h1 className=\"Name\">\n                                        P R O J\n                                    \n                                    </h1>\n                                </CSSTransition>\n                                <CSSTransition className=\"title-container r\"\n                                    in={isShowTitle}\n                                    timeout={0}\n                                    classNames=\"R\"\n                                    unmountOnExit\n                                >\n                                    <h1 className=\"Name\">\n                                        E C T S\n                                        \n                                    </h1>\n                                </CSSTransition>\n                            </Plx>\n                            <CSSTransition className=\"content-container\"\n                                in={isShowTitle}\n                                timeout={0}\n                                classNames=\"content\"\n                                unmountOnExit\n                            >\n                                <div>\n                                    \n                                    <hr></hr>\n\n                                    <Container className=\"project-container\">\n                                        <Row>\n                                            <Col \n                                                 xs=\"6\"\n                                                 sm=\"4\"\n                                                >\n                                                <div className=\"card\">\n                                                  \n                                                    <a href=\"https://github.com/ZanePartain/Kickr\">Kickr</a>\n                                                    <div className=\"description\">\n                                                        Kickr is an intramural soccer league managing web application. This is a group project \n                                                        consisting of 4 team members including myself. I was responsible for \n                                                        the frontend development along with a col…\n                                                    </div>\n                                                    <div className=\"dot-parent\">\n                                                        <div className=\"dot react\"></div>\n                                                        <div className=\"dot-text\">\n                                                            React\n                                                        </div>\n                                                    </div>\n\n                                                </div>\n                                            </Col>\n                                            <Col \n                                               xs=\"6\"\n                                               sm=\"4\">\n                                               <div className=\"card\">\n\n                                                    <a href=\"https://github.com/ZanePartain/LinuxFileSimulator\">Linux File Simulator</a>\n                                                    <div className=\"description\">\n                                                        Unix/Linux file system. I have implemented the major functionality of a Linux file\n                                                        system. It supports functions such as mkdir, rmdir, rm, creat, cd, ls, etc..\n                                                    </div>\n                                                    <div className=\"dot python\">\n                                                    </div>\n                                                    <div className=\"dot-text\">\n                                                        C\n                                                    </div>\n\n                                                </div>\n                                            </Col>\n                                            \n                                            <Col \n                                                xs=\"6\"\n                                                sm=\"4\">\n                                                <div className=\"card\">\n\n                                                    <a href=\"https://github.com/ZanePartain/Smile\">Smile</a>\n                                                    <div className=\"description\">\n                                                    Smile was a project I made for a course at WSU that focused on full-stack development. \n                                                    The professor for this course gave the students a bare-minumum guide \n                                                    to follow as well as some starter code. M…\n                                                    </div>\n                                                    <div className=\"dot java\">\n                                                    </div>\n                                                    <div className=\"dot-text\">\n                                                        Javascript\n                                                    </div>\n\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    </Container>\n\n                                    <Jumbotron className=\"git-jumbo\">\n                                        <hr></hr>\n                                        <a href=\"https://github.com/ZanePartain\"><h2>GITHUB</h2></a>\n                                        \n                                    </Jumbotron>\n                                </div>\n                            </CSSTransition>\n                        </div>\n                    </Waypoint>\n                </div>\n        );\n    }\n}\n\nexport default Projects;","import React, { Component } from 'react';\nimport './Animation.css';\nimport Plx from 'react-plx';\nimport { Container, Row, Col} from 'reactstrap';\n\nconst parallaxData=[\n    {\n        start: 1000,\n        end: 2500,\n        properties:[\n            {\n                startValue: -50,\n                endValue: 90,\n                property:'translateY'\n            },\n        ],\n    },\n];\n   \nclass Animation extends Component{\n\n    render(){\n        return(\n            <div className=\"Animation-container\">\n                <div className=\"top-design\">\n                \n                </div>\n\n                <Plx\n                    parallaxData={parallaxData}>\n                    <Container className=\"anim-container\">\n                        <Row>\n                            <Col className=\"anim-col\">\n                                <div className=\"mid-bg\"></div>\n                            </Col>\n                            <Col className=\"anim-col\">\n                                <div className=\"mid-bg\"></div> \n                            </Col>\n                            <Col className=\"anim-col\">\n                                <div className=\"mid-bg\"></div> \n                            </Col>\n                            <Col className=\"anim-col\">\n                                <div className=\"mid-bg\"></div> \n                            </Col>\n                            \n                        </Row>\n                        <Row>\n                            <Col className=\"anim-col\">\n                                    <div className=\"mid-bg\"></div>\n                                </Col>\n                                <Col className=\"anim-col\">\n                                    <div className=\"mid-bg\"></div> \n                                </Col>\n                                <Col className=\"anim-col\">\n                                    <div className=\"mid-bg\"></div> \n                                </Col>\n                                <Col className=\"anim-col\">\n                                    <div className=\"mid-bg\"></div> \n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className=\"anim-col\">\n                                    <div className=\"mid-bg\"></div>\n                                <Col className=\"anim-col\">\n                                    <div className=\"mid-bg\"></div> \n                                </Col>\n                                <Col className=\"anim-col\">\n                                    <div className=\"mid-bg\"></div> \n                                </Col>\n                                <Col className=\"anim-col\">\n                                    <div className=\"mid-bg\"></div> \n                                </Col>\n                            </Col>\n                        </Row>\n                        \n                    </Container>\n                </Plx>\n            </div>\n        );\n    }\n\n}\n\nexport default Animation;","import React, {Component} from 'react';\nimport './Contact.css';\nimport * as firebase from 'firebase';\n\nimport {\n    Form,FormGroup,Label,Input,\n    Container,Row,Col,\n    Button } from 'reactstrap';\n\nclass Contact extends Component{\n    constructor(){\n        super();\n        this.state={\n            speed: 10\n        }\n    }\n\n    componentWillMount(){\n       const rootRef = firebase.database().ref().child('email');\n       const speedRef = rootRef.child('speed');\n       speedRef.on('value', snap => {\n           this.setState({\n               speed: snap.val()\n           });\n       });\n\n    }\n\n    render(){\n        return(\n            <div className=\"Contact-container\">\n                <h1 className=\"Name contact\">C O N T A C T</h1>\n                <div className=\"contact-content\">\n                    <label>\n                        Email: <tab></tab><div className=\"cont\">zanepartain@live.com</div>\n                    </label>\n                    <br></br>\n                    <label>\n                        Github: <tab></tab>\n                        <a href=\"https://github.com/ZanePartain\"><div className=\"cont\">https://github.com/ZanePartain</div></a>\n                    </label>\n                    {/** \n                   <Container fluid={true}>\n                       <Row > \n                           <Col sm={{ size: 6, order: 2, offset: 1 }}>\n                                <div className=\"contact-info\">\n                                    {/** \n                                       put email (not WSU), linked-in, instagram, resume, github \n                                    \n                                </div>\n                           </Col>\n                           <Col sm={{ size: 6, order: 1, offset: 1 }}>\n                                <div className=\"contact-info2\">\n                                    <Form>\n                                        <FormGroup>\n                                            <Label className=\"label\" for={\"firstName\"}> First Name </Label>\n                                            <Input type=\"text\" name=\"first_name\" id=\"firstName\" />\n                                        </FormGroup>\n\n                                        <FormGroup>\n                                            <Label className=\"label\" for={\"email\"}> Email </Label>\n                                            <Input type=\"email\" name=\"email\" id=\"email\" />\n                                        </FormGroup>\n\n                                        <FormGroup>\n                                            <Label className=\"label\" for={\"subject\"}> Subject </Label>\n                                            <Input type=\"text\" name=\"subject\" id=\"subject\" />\n                                        </FormGroup>\n\n                                        <hr className=\"form-hr\"></hr>\n\n                                        <FormGroup>\n                                            <Input type=\"textarea\" name=\"text\" id=\"Text\" />\n                                        </FormGroup>\n\n                                        <Button className=\"send-msg-button\">Send Message</Button>\n                                        \n                                    </Form>\n                                </div>\n                           </Col>\n                       </Row>\n                   </Container>\n                         */}\n                </div>\n                \n            </div>\n        ); \n    }\n\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport './Home.css';\nimport About from './About';\nimport Intro from './Intro';\nimport Projects from './Projects';\nimport Animation from './Animation';\nimport Contact from './Contact';\nimport Waypoint from 'react-waypoint';\nimport { CSSTransition } from 'react-transition-group';\nimport Plx from 'react-plx';\n\n\n\nconst parallaxData=[\n    {\n        start: 0,\n        end: 200,\n        properties: [\n            {\n                startValue: 'blue',\n                endValue: 'green',\n                property: 'backgroundColor'\n            }\n        ]\n    },\n];\n\nclass Home extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            loadPage: true,\n        };\n    }\n\n    _LoadPage = () =>{\n        this.setState({loadPage: true});\n        console.log(\"in _showAnimation()\");\n    }\n\n    render() {\n    return(\n       \n        <div className=\"Home\">\n                <Intro />\n                <About />\n                <Projects />\n                <Contact />\n                {/**<Animation />*/}\n        </div>\n      \n    );\n    }\n}\nexport default Home;","import React, { PureComponent } from 'react';\nimport './App.css';\nimport Home from './components/Home';\nimport Waypoint from 'react-waypoint';\nimport { CSSTransition } from 'react-transition-group';\nclass App extends PureComponent {\n  constructor(props){\n    super(props);\n    this.state={\n      isActive: false\n    }\n  }\n\n\n  handleHomeSelect(key){\n    this.setState({key});\n  }\n\n  _showBio(){\n    this.setState({isActive: true});\n  }\n\n  render() {\n\n\n    return (\n        <div className=\"App\">\n        \n          <Home />\n\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as firebase from 'firebase';\n\nvar config = {\n    apiKey: \"AIzaSyA_QfKpslzjyg1ijCRzKDFd0PohjHmmvkw\",\n    authDomain: \"my-site-b0187.firebaseapp.com\",\n    databaseURL: \"https://my-site-b0187.firebaseio.com\",\n    projectId: \"my-site-b0187\",\n    storageBucket: \"my-site-b0187.appspot.com\",\n    messagingSenderId: \"815226838908\"\n  };\n\nfirebase.initializeApp(config);\n\nReactDOM.render(<App /> ,  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}